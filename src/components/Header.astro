---
import ThemeToggle from "./ThemeToggle.astro";
const navItems = [
  {
    title: "Experience",
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: "Proyects",
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: "About",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Contact",
    label: "contacto",
    url: "mailto:gcanales58@gmail.com",
  },
];
---

<header class="flex justify-between items-center py-3 mx-auto p-5 w-auto lg:w-[1000px]">
  
  <img class="w-10 h-10 p-1 rounded-full ring-2 ring-gray-300 dark:ring-gray-500" src="foto1.jpg" alt="Bordered avatar">

  <nav
    class="flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ThemeToggle />
  </nav>
  
</header>
<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section");
    const navItems = document.querySelectorAll("header nav a");

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") == entry.target.id) {
              item.classList.add("text-blue-500");
            } else {
              item.classList.remove("text-blue-500");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
  }

  nav {
    dark:bg-gray-800/90 bg-white/50;
  }

  @keyframes nav-shadown {
    0% {
      dark:bg-gray-800/0 bg-white/0;
    }
    to {
      shadow-lg ring:1 backdrop-blur ring-white/10;
    }
  }
</style>
